# Docker compose to have Zookeeper, Kafka, and Kafka Manager running for development.
version: '2'
services:

    zookeeper1:
      image: zookeeper:3.5.6 #latest
      container_name: docker_zookeeper_1
      restart: always
      ports:
        - "2181:2181"
        #- "8080:8080"
      environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
        # ZOO_ADMINSERVER_ENABLED "/commands/[command name]", e.g., http://localhost:8080/commands/stat.
        ZOO_TICK_TIME: 50000 # timeout heartbeat   for testinggg
        ZOO_INIT_LIMIT: 50 # amt of time to allow followers to connect and sync to a leader
        ZOO_SYNC_LIMIT: 51 #default 2  to allow followers to sync with zk
        ZOO_STANDALONE_ENABLED: "false"
      logging:
        driver: json-file
        options:
          max-file: "5"
          max-size: "10m"

    kafka1:
      image: wurstmeister/kafka:2.12-2.4.0
      container_name: docker_kafka_1
      restart: always
      ports:
        - "9092:9092"
        - "9999:9999"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_PORT: 9092
        JMX_PORT: 9999  #for kafka-manager
        KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.60.6 -Dcom.sun.management.jmxremote.rmi.port=9999"
        #KAFKA_ADVERTISED_HOST_NAME: 192.168.60.7 #127.0.0.1
        KAFKA_LISTENERS: PLAINTEXT://:9092  #PLAINTEXT://kafka1:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.60.6:9092
        KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
		# topic setup
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_MIN_INSYNC_REPLICAS: 2
        #KAFKA_CREATE_TOPICS: "request:3:1,reply:3:1"  #[topic_name]:[partition_count]:[replication_count]
        KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
		###
        KAFKA_REPLICA_FETCH_WAIT_MAX_MS: 5000 #500
        KAFKA_LAG_TIME_MAX_MS: 50000 #10000
        KAFKA_SOCKET_TIMEOUT_MS: 70000 #30000
        # log retention (for each topic partition)
        KAFKA_LOG_RETENTION_BYTES: 2147483648 # 2gb default -1
        KAFKA_LOG_SEGMENT_BYTES: 536870912   # 512MB default 1gb = 1073741824 / (1024^3)
        KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 120000 # 2min  default 5 min = 300000 = 1000*60*5
        # log cleanup
        KAFKA_LOG_CLEANUP_POLICY: "delete" #"delete,compact"
        KAFKA_LOG_CLEANER_ENABLE: "true" #default true
        #KAFKA_LOG_CLEANER_MAX_COMPACTION_LAG_MS: 300000 #5min 1000*60*5=300000
        KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO: 0.5 #default 0.5 dirtylog/total log
        KAFKA_LOG_CLEANER_DELETE_RETENTION_MS:   90000 #1.5 min // default: 1day 86400000= 1000*60*60*24
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zoo1
      logging:
        driver: json-file
        options:
          max-file: "5"
          max-size: "10m"

    kafka-manager:
      image: sanjosebadger/kafka-manager:latest
	  container_name: docker_kafkamanager_1
      ports:
        - "9000:9000"
      environment:
        ZK_HOSTS: zookeeper1:2181
      depends_on:
        - zoo1
